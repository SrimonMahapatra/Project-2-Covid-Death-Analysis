<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook locale='en_IN' original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Tableau1)' inline='true' name='federated.1s4jkfm0g1bubg1fr5mwp0d92wdt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau1' name='excel-direct.1605ze71u0b8400zyoeq70q8lm44'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='H:/Study/Data Analytics/Portfolio Project/Tableau_SQL Query_Dashboard/Tableau1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1605ze71u0b8400zyoeq70q8lm44' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Total_Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total_Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.421538' measure-ordering='alphabetic' measure-percentage='0.578462' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Tableau2)' inline='true' name='federated.0iumws812rdyiq1drbvm81sc1u1h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau2' name='excel-direct.13d2hhq0zwkntz15wkctr0qgnw8p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='H:/Study/Data Analytics/Portfolio Project/Tableau_SQL Query_Dashboard/Tableau2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.13d2hhq0zwkntz15wkctr0qgnw8p' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Continennt' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.48' measure-ordering='alphabetic' measure-percentage='0.52' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Tableau4)' inline='true' name='federated.1bi1uu31g8kzpn1721pcy11kwc5b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau4' name='excel-direct.0ftecz203xq4ju11kawli1jhrdcg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='H:/Study/Data Analytics/Portfolio Project/Tableau_SQL Query_Dashboard/Tableau4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ftecz203xq4ju11kawli1jhrdcg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Location,MONTH(date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Location:nk]' />
          <groupfilter function='level-members' level='[tmn:date:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.46' measure-ordering='alphabetic' measure-percentage='0.54' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='Sheet1 (Tableau3)' inline='true' name='federated.1p0kyzm04jcb2g11bqddx02c1zk7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau3' name='excel-direct.0i0a4kw1yp0zdg1esuxeq0ewbqam'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='H:/Study/Data Analytics/Portfolio Project/Tableau_SQL Query_Dashboard/Tableau3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0i0a4kw1yp0zdg1esuxeq0ewbqam' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D239:no:A1:D239:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.4' measure-ordering='alphabetic' measure-percentage='0.6' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>GLobal Numbers </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau1)' name='federated.1s4jkfm0g1bubg1fr5mwp0d92wdt' />
          </datasources>
          <datasource-dependencies datasource='federated.1s4jkfm0g1bubg1fr5mwp0d92wdt'>
            <column datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total_Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total_Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[:Measure Names]' value='161' />
            <format attr='height' value='65' />
            <format attr='text-format' field='[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' value='none' />
            <format attr='font-size' data-class='subtotal' value='10' />
            <format attr='font-family' value='Tableau Semibold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#eb3e1b' />
            <format attr='background-color' scope='rows' value='#5555ff' />
            <format attr='color' data-class='subtotal' value='#f28e2b' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' value='Tableau Semibold' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='2' />
            <format attr='stroke-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7911050319671631' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#ffffff67' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8A8688FA-BEC1-449C-BF70-7036C461F335}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Death Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau2)' name='federated.0iumws812rdyiq1drbvm81sc1u1h' />
          </datasources>
          <datasource-dependencies datasource='federated.0iumws812rdyiq1drbvm81sc1u1h'>
            <column datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continennt' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iumws812rdyiq1drbvm81sc1u1h].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' />
          </filter>
          <manual-sort column='[federated.0iumws812rdyiq1drbvm81sc1u1h].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0iumws812rdyiq1drbvm81sc1u1h].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0iumws812rdyiq1drbvm81sc1u1h].[none:location:nk]' value='162' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0iumws812rdyiq1drbvm81sc1u1h].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iumws812rdyiq1drbvm81sc1u1h].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0iumws812rdyiq1drbvm81sc1u1h].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{334052EF-FE31-4F7A-AD6D-9D6B3DF936C1}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='16'>Percent of Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau3)' name='federated.1p0kyzm04jcb2g11bqddx02c1zk7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1p0kyzm04jcb2g11bqddx02c1zk7'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[Latitude (generated)]</column>
            <column>[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[Longitude (generated)]' field-type='quantitative' max='57616083.913162842' min='23577418.71144899' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[Latitude (generated)]' field-type='quantitative' max='11346533.654570622' min='-3059044.7442349875' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[sum:PercentPopulationInfected:qk]' num-steps='9' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[none:Location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[none:Location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[none:Location:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected Per Country'>
              <formatted-text>
                <run fontsize='12'>Percent Population Infected Per Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[none:Location:nk]' />
              <color column='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[Latitude (generated)]</rows>
        <cols>[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F0876893-56BD-4009-BA6E-1CC507467EC2}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau4)' name='federated.1bi1uu31g8kzpn1721pcy11kwc5b' />
          </datasources>
          <datasource-dependencies datasource='federated.1bi1uu31g8kzpn1721pcy11kwc5b'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bi1uu31g8kzpn1721pcy11kwc5b].[Exclusions (Location,MONTH(date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Location:nk]' />
                <groupfilter function='level-members' level='[tmn:date:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
                <groupfilter function='member' level='[tmn:date:qk]' member='#2022-01-01 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bi1uu31g8kzpn1721pcy11kwc5b].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bi1uu31g8kzpn1721pcy11kwc5b].[none:Location:nk]</column>
            <column>[federated.1bi1uu31g8kzpn1721pcy11kwc5b].[Exclusions (Location,MONTH(date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1bi1uu31g8kzpn1721pcy11kwc5b].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bi1uu31g8kzpn1721pcy11kwc5b].[none:Location:nk]' />
              <text column='[federated.1bi1uu31g8kzpn1721pcy11kwc5b].[none:Location:nk]' />
              <text column='[federated.1bi1uu31g8kzpn1721pcy11kwc5b].[avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bi1uu31g8kzpn1721pcy11kwc5b].[avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1bi1uu31g8kzpn1721pcy11kwc5b].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{377A41DE-BD99-4C93-B73D-2C921CEA725B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='19' param='vert' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='17' param='vert' type='layout-flow' w='99034' x='483' y='929'>
              <zone h='98142' id='8' param='horz' type='layout-flow' w='99034' x='483' y='929'>
                <zone h='98142' id='6' type='layout-basic' w='99034' x='483' y='929'>
                  <zone h='20674' id='3' name='Sheet 1' w='46994' x='483' y='929'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='28395' id='5' name='Sheet 2' w='46994' x='483' y='21603'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49069' id='11' name='Sheet 3' w='52040' x='47477' y='929'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49073' id='13' name='Sheet 4' w='99034' x='483' y='49998'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='25' param='vert' type='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='158' h='20674' id='3' is-fixed='true' name='Sheet 1' w='46994' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49069' id='11' is-fixed='true' name='Sheet 3' w='52040' x='47477' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='219' h='28395' id='5' is-fixed='true' name='Sheet 2' w='46994' x='483' y='21603'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49073' id='13' is-fixed='true' name='Sheet 4' w='99034' x='483' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5896D7D2-B9ED-42D9-9DD1-422C7EE07406}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s4jkfm0g1bubg1fr5mwp0d92wdt].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{941BCA10-4751-4653-B627-E25D6AF0FBCA}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0iumws812rdyiq1drbvm81sc1u1h].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0iumws812rdyiq1drbvm81sc1u1h].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iumws812rdyiq1drbvm81sc1u1h].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC2ED161-CC61-48D6-8DEA-53854AB807EA}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p0kyzm04jcb2g11bqddx02c1zk7].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{0BDBF9A0-4407-4984-BCC8-FA4E76C74F81}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bi1uu31g8kzpn1721pcy11kwc5b].[none:Location:nk]</field>
            <field>[federated.1bi1uu31g8kzpn1721pcy11kwc5b].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B50A031-6BA5-4028-92FA-B78741451264}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{735EF93B-BAD1-49D8-8D1C-79080C216D7F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='89' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABZCAYAAABotSuMAAAACXBIWXMAABJ0AAASdAHeZh94
      AAARIklEQVR4nO2de1RU9drHP+y5MM4AQVkkoghpauZSGcyWCZQetVTU8MIKyxQvvEfUEiyP
      muf1lJfU43VxLPJ4Et9kiZaa2qudSvOGV0R9C8skrmpwuDowXGZm8/4xMEIo4A2r/fusxVqz
      9n7mmefZPN/9e36/DfNzqq6urkYgUCjSgw5AIHiQCAEIFI0QgEDRCAEIFI0QgEDRCAEIFI0Q
      gEDRqJsyyA/2bok4BIIHghgBBIpGCECgaIQABIpGCOC3zqBNtD6UQ+tDm3B+0LH8AWlyEqwk
      nJfk4PpcYxbpmCcHYv6ppSK6R6i90YxbgiG0D2p3A1CJnHaM8g/eovx07oOO7oEiRoD7ylhc
      D+XQ+lAOroMeUAgPD8Nly1EeiuhfU/wAzkhP9MfwcvADCuq3gxgB6lA5z5vKmteqyCN4hPtC
      dhxFr76H7YFGdqd4ovtrLLrH1WDLoXL1nyndl0K11YBkfA1D74oHHeADRwjgTtF1w3nOOgz9
      OiNpAfMVqnYtoHTjv5Gt2Hv3+X9ymDvPz8F5PtRto6TABRjCX0TT0cfug0rktK8oWziTyqyq
      u4+x+0xa9VIDViyxIzDtqW13ypCTP8SUXGvogTr0LfTDhqLp8AhOKsBWhu38J5S+9x6Wwtqc
      +6D77yXoA2pytpUhZ5yk4uOFmI/8XGOkRTVkGS4ThqDxNNzws3QZlryanNTeaKM+xPDi06j0
      anveVy5S9ekCynak0JL/oCJaoDtB7Y8+7gtc+9cUAoC+Ldrwf+GxdlqzL6rmpUicn/K54QNn
      pCeG4fqPVWjuwa1J9UxfVADmvZh3NNbrt0cbOh7tEzXFD6AyoPKP5KGlb9Tk0x7dykRc+tbJ
      WWVAeqI/+pcCHJ6ksE9xnzPGXvx1/Wy8kZMmZj9uoT1rir8m77Y90YUOa/GCFAK4A6Rx76Pv
      oAbbT5jfeJr8YD8K52zDBjg9PRN9kBb+PYH84GhHS1W52Jv8YG/yg2sn0a7I5+MwRQ+iYLC3
      3cfC3fZWy20YunvQnqt8fO0vCnKRG7WswnZwFden9aFggDf5wZ0p2nTefqrLSHS+AM+ieVoN
      lFO5qLM9lwFPUzhtCuaTNUOEehj6Cf44YcWaOIqCYG8KXplP5XXAbST64R5ADzTd3QGwfjK4
      5pp0pmDiOEz/+/3dJ32bCAHcNh5oez0FgLz3r5jPFQNVyCf+gvkEgAvOgQOa4ceEJfE9KpNT
      qa7A7uPgP6m8CqAGVePvvrdcpHLjKqq+v0K1FaAM2/8kYG9Y1DWN8gmsPwC0wvntQzy0cAG6
      Pp2oTtuH+fOv7W66B6LVA+a9lK0/STVQfTWeioP/AUDT8wXgPJaLpXbPr+zAfc0SWg0IQMo7
      TmXCjhafa4k5wG3THqm1/VV12fU6x6uw/pwOz/riZHBtlicnv9cxvDUVbYe2SPp7/6uwZaYD
      neARTyRopLi0SM/OwDB1HJp2j9VpyeqSRfnqFWjfn4XG43E0L0SieSESl6pMKt4LpfRwLjxq
      /xz0I3no0MiGLtT2HC0fzKbiqbXovA2oe41H3Ws8Bls+lo0RlGw5e/eJ3wZiBLhtspDz7a+c
      DG51jmtR+9lbjuoyU9NuvN/A7Z+L0XnnYH6zZ00rMBRz9r2L1HYqyV70+mHoQz1vbfjcKtyX
      zcJZ9RWlr9e0N3XaNwc/rKVkZDcKpk2hNOELLP+pBK0PuoXLcFYDZaX2Cazta0wDalu+Oj/z
      ttn9FO6ldFxXCl4dx/WNm6nKLANVazRT16LvdO/ybw5CALdNEVUpqQBIw95F39Md+x30ffTP
      ApRSeeSbGtsfsdUUtOb5cUhqQG3ASQ1Oxr5oVEDJT1gzi0HtjnpgOJpH7mGo/7eO8hQroEYz
      /XNcQ3rhpAbU7qj6xeA2PRQAtbEPElD9SyrWvDLQ+aIZOwRNPWehGDasRmf0gbR9VMRFUjJh
      ib1NUj2Byhc4eZgqG6D6E4Zl/4Xao2YirHsMlXE8uufaAz1otXQz+oE9cCo6TtXmeVyPmER5
      LoCv3U8LIlqgO0De8hfM/Xeg79AJ/drv0Nc5V/3dOsyHa5cwL2K5WAzt3JGeW8bD3yzDsQz6
      y1VkQGo3AfcvJ9ynSHOpeHc66g9i0T3ujfPsPTjPrnP6WLQ9n9xrQBucnl3Mw98svoUvNdKT
      Y2i1agwuvz5l/g5rOmDdRXnin3EO74QU8A7uu96pZ2ZLGErFMXBq1x/9O/3rXTc7qVhT7zDV
      O0SMAHeC9SzmyKGYDvyIXFvr5itUJURQ9Mb6OisuVViWhf7KrsQ+0Tz5PqaE4zXHrVRnHqBs
      TsQ9bYGAmnajHyX/OoC1uKzmYCVy2gHKdh4CQP5sNqYDl6m21ZxL3Y5p4vxftUCHKP/HZqrS
      8m7kYivDlrodU+QbVFnt+VrjhlH09+1YrpTcWM83F2BN2Uz5t1nYJ9xxVKZmIput9eOZ/Rrl
      Ofc4/yZwauqLscQ/xAj+yIgW6HeG4080GuV3+kd7DwAxAggUTZMCOHPmTEvFIhC0OE0K4Nq1
      ay0Vi0DQgDZt2gD3rw7FKpBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA
      0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA0QgBCBSNEIBA
      0QgBCBSNEIBA0QgBCBSNEIBA0ShGAHl5eaxcuZLg4GB8fHzw8vKiXbt2BAYGsm3bNmy2+hsI
      RUZG4uXlddOfyMhIwP5tZUaj8ZZ2Xl5ehISEYDI1vWNMdnY2UVFRdO7cGS8vL/z8/AgLC+P0
      6dM3tU9OTnbYenl5YTQab/ntaTt37nTk3NyYZFnmxIkThIWFOT7Hx8eHsWPH8uOPP9aztdls
      7N27l6FDh+Ln5+eIPyoq6pYxlZaWEhsbS/fu3Zt9je4Hivl26JMnT7Jy5cp6x2w2G2lpaURH
      R5OSksLixYuRJInS0lJycxvbVrT5qFQqnJycGrU5c+YMEyZMoLCw0HGsoqKCI0eO4O7uTu/e
      vevZV1VVsW7dumYVTUFBAevXr8disdxW3AsWLCA+Ph5ZvrHbgcVi4ejRo4wcOZItW7bg7+9P
      RUUFkZGRfPXVV/XeX1FRwc6dOzl37hxbt26lXbt2jnji4uLYtGkTpaX2zfI6dOhwW7HdSxQz
      Ami1WkJCQti3bx+ZmZlcvXqV06dPExQUhCzLHDhwgLy8PADKy8vJz7dvBBYTE8PVq1fr/cTF
      xQH2761MTk5ucD4+Ph6tVoskSYwePRoXlwZ7qjgwmUz87W9/o7CwkDZt2hAfH092djY///wz
      H374IZ07d27wnhMnTnDs2DE6duzIa6+91mje+/bt4+LFiwQFBTFgQHN2r7STn5+Ps7MzUVFR
      pKSkkJOTw549e2jTpg0lJSUkJCQAdlEUFhbi5ubGokWLSE1NJTs7mw0bNuDq6kp6ejr79+93
      +J03bx6xsbFUVlbi7Ozc7HjuF4oRwODBg4mLi6NHjx5oNPbdr9q2bcvw4cMb2JpMJsfd1c/P
      77Y+x2KxkJCQQFVVFT4+PgwcOLBR+6SkJC5cuIBGo2HJkiUMHDgQlUqFTqdj+PDhREdH17M3
      m82sX7+eiooKxo0bx2OPPXZL37m5uXz00Ueo1WomTZqEXt9wU6KbIcsy/v7+fPvtt8yfPx9P
      T08kScJoNBIQYN8UOz8/H6vVvsPLSy+9xKlTp4iIiMDd3R2VSkVQUBBPPvmkI45a3NzciImJ
      4ezZswwaNKhZ8dxPFNMC/Zr8/Hx2797N8uXLkSSJsWPHOoopPz+f8vJyNBoNrq7N2/K0lgsX
      LpCUlARAaGgonp6N7M6IXQAWi4WuXbvyzDPPNOn/yJEjHD9+nK5duzJ69Gg2bdp0S9vPPvuM
      y5cvM3DgQIKDg/n000+blYMkSY55Tl3S09M5d+4cAAaDAbVajaurK9OmTWtgm5qayqVLlwDq
      XcMVK1Y0K4aWQlECuHbtGsOGDas3MWvfvj3vvvsuo0aNQpLsA2Jubq6jPx0/fjwAOp0Of39/
      ZsyYQWBgoMO2LrIs88knn2AymfD09CQ0NLTReGRZ5sqVKwCo1Wrmzp3LwYMHMZlMuLu7M2rU
      KObMmeNooUwmE7GxsdhsNiZPnswjj9x6S8msrCw2b96MXq8nMjISrfamm/82m4yMDKZMmUJ2
      djZ6vZ6wsLBb2p4+fZpp06Y5rsPQoUPv6rPvJ4ppgeBGz56Tk0NKSgqLFi2iuLiYN998k9Gj
      RzvanpCQkHo9fXZ2Ntu2bSMrK4tXXnkFo9FIenp6A/9LliwhMTERd3d3Nm/ejK9v41sZmc1m
      x1zD2dmZt956y3HnDAsL4+OPP6Zbt258/fXXFBQUEBoayoULF9i4cWOjBXj58mVGjBjB9evX
      2blzJ3379r2j61VYWMjrr7+Ot7c3ffv2xWQy8fnnn3P58mWCgoLq2WZkZPDiiy/i5eXFiBEj
      ePTRR0lKSiIlJYWOHTve0ee3BIoaAWqRJAlPT08iIiLw9fVl0qRJnD9/nvPnz9OvX78G9iqV
      ioCAAObOnUtUVBSFhYWkpaXVK/Dc3Fz27dsHQJ8+fejSpUuTcbi4uNC2bdt6MalUKlxcXJg6
      dSq7d+/m2rVrfP/992RlZXHx4kVkWWbixIkNfNUuycbFxZGUlOTouwcPHtzANjk5mYCAABIS
      EjAajTeNraSkhIiICE6dOoVKpSI8PJyFCxfedEKfkZFBeHg4GRkZtGrViqioKKZPn37Xo05L
      oIgRQJblBuv8tdT2shUVFRQVFQH2JbzGqJ2k1mXXrl1kZmai1+uZMmWKY6LdFEFBQUiSxKVL
      l+qNKlarldrNe/R6PUVFRfWWJBuj7nLqnbJ161bOnDmDRqNhzpw5LF++/KbFL8sy69evdxT/
      2rVriY6O/l0UPyhEAGVlZUyaNInly5eTlpbmEEN6ejqrV6+mtLQUDw8Px1A9a9YsxowZw9Gj
      R7FYLMiyzNmzZ1m6dClgb6U6derk8F9cXMyOHTuQZZmAgAB69ux50ziSkpLo2LEjXl5e7Nmz
      B4Dnn38ePz8/iouLmTt3LtnZ2Y6VpLy8PFxdXfH397/pcuzVq1eJiYlxxJScnExISAhxcXE3
      tQ0JCQHAaDRy5swZx91/0aJF9R6mmUwm9u7diyzL9O7dm4iIiJvOecA+8hw8eBCA4cOHM2TI
      kLv6XbU0immBCgoKWLNmDWvWrGlwTqVSMWXKFMeauyzLHDt2jGPHjjWw1Wq1REdH11vdOXny
      JD/88AMajYaJEyfecrnxwIEDmM1mfH19HSLx9PRk1qxZzJ49m7Nnz9KnTx+HvSRJvPrqq/Tq
      1euucm+M4uJijhw5AkBgYCCtW7fml19+cUzOa0X7a4xGIwkJCVy5coWSkhIAEhMTSUxMbGBb
      K8rk5GTCw8MbPMCrfapd17alUMQIYDAYiI6OZvDgwXh4eDiO63Q6AgMD2b59OzNnznTc5Vas
      WMHbb79Np06dHK1Mre0XX3zBqFGjHD7MZjMbNmzAYrHQpUuXegVcl9o5gl6vZ+nSpY4nowAv
      v/wyu3fvpl+/fmg0GiRJokOHDqxatYp58+bd8u57L6gVb7du3ViwYAEajYa8vDzKysqafjP1
      V8x+j4hdIluIL7/8ksjISGbMmMGsWbPua1E3F1mWiYmJYf/+/cTHxzfrOURLI3aJ/ANgsVjY
      unUrPXv2ZPLkyb+J4gfIzMzk8OHDTJ482fGEV2mIEUDwm0aMAALBfUQIQKBohAAEikYIQKBo
      hAAEikYIQKBohAAEikYIQKBohAAEikYIQKBohAAEikYIQKBohAAEikYIQKBohAAEikYIQKBo
      hAAEikYIQKBohAAEiub/AYSopgSOcfijAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      cXZ/iqwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAckElEQVR4nO3daXNc153f8e+5S+8b9p0ACIIiqc2S5bHl2LI1yniZsR3ZU1M1SVWSSlVS
      lUpSeZBX4DeTSlzeZmRZ0kT22OPxWJnYIrUQAAEQJEGsjV7Qe9/95EGDlNpNSgREAmr0+VR1
      Nbpxb+MAOL+7nP73uUJKKVGUHqWddAMU5SQ9lABIKQmC4GG8lKIcK7UHUHqaCoDS01QAlJ6m
      AqD0NOMwC5eLWTZ39kj1jdKs7GEHJk9cOv+o2qYoj9yhApDqGyZdLmOEwvSPj3F7Zx8ZBARB
      oEaClK50qABs31zBMVP0R2Hp2jrzjz2G0DR0IZBSomnqiErpLofqsZnBEcJagBcIxkaHaTaa
      j6pdinIsxMMohZBSqj2A0pVUj1V6mgqA0tNUAJSepgKg9DQVAKWnqQAoPU0FQOlpKgBKT1MB
      UHraoQLgORarK6tYjkd2+zbFSv1RtUtRjsWhAmDZNpPj/awur1CxNLIb66j6T6WbHaoaVCfg
      xkaB2elh9msCx2uqcmilqx0qAPlcDqSH5Zs0ShuYif5WAZwqh1a6lKoGVXqa6rFKT1MBUHqa
      CoDS01QAlJ6mAqD0NBUApaepACg9TQVA6WkqAEpPUwFQetqhAlAvF3jr95fxnAZXLl/mvYVl
      1AXGlG52qGK4eHqATHIPAbiuS6C7qhpU6WqHCkCjVqZQKFBIJwhFUwS+gxQauq6qQZXudKhq
      UMe2aFo2oUgUPAdhhomETFUNqnQtVQ6t9DTVY5WepgKg9DQVAKWnqQAoPU0FQOlpKgBKT1MB
      UHqaCoDS01QAlJ52qAAEvsvG1jZIyd7OBps7uUfVLkU5FocqhrOaTfZyeUb7E6ze2GR67tzd
      Mog7N0XpJocKQCyRIhYxCXyHvqEJ6sUc/vAgQpVCK13qUAEoF7LUqjVK1igRGsh4Cl0IEBpC
      CFUMp3QdVQ2q9DTVY5WepgKg9DQVAKWntZ0Eb64t8PqvfsfgQD+ZkbO8+MVnTqpdinIs2gIw
      Ofc4T21usW/5CHFSTVKU49MxDDoyOoaseYwPj5xEexTlWHUEYDdfYGt7k2bT48zU+Em0SVGO
      Tcf7ALnsFrWGQzyZYnhw4IFeRL0PoHSrth5rV/P8rx/8kKtX3+fmRvak2qQox6btECicHOSl
      l17i4sWL3Ly1eVJtUpRj03HM4lSLvPnmmxRrTsfCdqPClfcXAaiX9lhYWX/0LVSUR6jjJDgW
      jxOREfrjoY6FdTNKxBRI32MjW0KTEKjJcZUu1hGAcqXC6sISwePPMzc3076waQJgN6tYlkU2
      v8/58/Pouq5OgpWu1DYKdH31Go4fMDE2STyRwNDbO3S5kGUrW2BgZJyR/jS1eoNEIq5GgZSu
      1RaASn6H1375a8bHJhibPsf89IO9D6ACoHSrth6bGhzj3OQwhUKBesM6qTYpyrHp2GRXKhXM
      UAhdV1tz5fRrOwmu7ucYPXMePwjoTydPqk2KcmzaAiABTdfRdF3tAZSe0BaAVN8Qmqaxs1dE
      U/XQSg/o2My/c+Uylm3jef5JtEdRjlVHAGJhg9XVVfaK5ZNoj6Icq44AhEJhDE1DTfKm9IKO
      ANTqdRLJOPV67STaoyjHqi0AWzcWkUaMfL5IIpm45wrVWhWQlAp77Ffqx9FGRXlk2gIwemae
      mdlZvv3tbzPW1xmAernAewvLBL6P48PGrRuo+k+lm7UNg3rNMj/60Q+ZmZllbPoxRkaG2xaO
      pwfoT+8hNJ1mdZ+hsUkIAnxVDq10qY5PhH3l+edYun6Lew2ClgtZ8vk828lNdnJlhrQYYqgP
      XQhVDKd0pY7PA7giRCYVxapWOhZOD4zw5S+1pkuZmJi6+7waMFK6VVsArEaV0dFx+jIZEn1q
      XiDl9GsLQKWY47e/+S3Fcp1Lz32J4f4nT6pdinIs2gIwPHmWF79qUiiVyVfsk2qTohybjrPW
      vZ3bLC0tk+kfOon2KMqx6ghAo9HADBk0LfWJMOX06whAtVLB9Xx+/49vcmuneBJtUpRj0xGA
      qelpDF3nxW+8zMxY/0m0SVGOTUcA8oUSc3NnKeTU3KDK6dcWgPp+lp29PHXP5PPPPX1SbVKU
      Y9MWgKWV6/zFd17Gb1Yw7/OZ4DvTCKkrwyunQVsvH+lP8crfvsLG7VtcXrjesXC9XOA3v/tn
      fKfBlctv8+7CsiqDULpaxwUybNsmHA7hOC6hUOcEuUvXlpiZGKRQM3GqOc6cm4ODalChPkiv
      dJm2d4Ld+j7/83//iLNnzyLCGb7yxc+2LVwuZNna3CKT6SO3cxs9kkTXNFDVoEqXatsDBL7H
      6vIijq8xOnmGob7UA72ImhtU6VZtPVbTDfayO3iei2WpWiDl9OucFsXUWF5ZJaemRVF6QEcA
      pG4yPD6G7jVPoj2Kcqw6AhCPxbm9uoijRU+iPYpyrDoCYEudf/fv/wOmr/YAyunXEYCECa+/
      8SbRzOBJtEdRjlXHh+JL5Rpf/MpLpGKdb4IpymnTsQeIhgWv/vTHvLt04yTaoyjHqvMSSXWb
      iZkpgmbntCiKctq0B0BK0qkU2zfXCKXUOYBy+rUFYPXqH7ixtcvFZ1/gqfNn7ruS9D2WlxZY
      W99S1aBKV2s7CS6VijiOz1u/fg1d/ws+c/HsPVfy3SZN20d4ZaQcRwYBwUFFqKJ0k7YAPPv8
      SzzpeQDoRscA0V2eaxOKp/GbZSQghEDTNFUMp3Sdtl6uGwa6YeA7FutbO5ydnrrnSuF4HzGt
      iDE81nYxPfV5AKXbdGzmi7ldSpUali9aW/d7rCQ0nZm583cfqwMfpVt1BGDh6rskMgMsvvce
      TRc++/jcSbRLUY5Fx0H76OAAOztZnvjsFxgZ6DuJNinKsek8a9VaBz1aKM7kqJoYSzndOgLg
      uS5CGMRjkZNoj6Icq7YAeI6FF+hUK/tUauoKkMrp1xaA5Xd+x++vXkeE4zwxP3NCTVKU49Mx
      L5Bj1bm2uIiRGuHSufuXQ3yYmhVC6VYdATgKFQClW6keq/S0IwfAtS2alvMw26Iox+5IAQhc
      i6XlFcqV6sNuj6Icq/uXfH4E26pQqzk4m5sMDvbdnRw3CIKH3T5FeWQC6R8tAOFYhnh0Ey0U
      QRMaQleT4yrdxZc+f7/5mhoFUnqPH3j8YutV0qE+NQqk9JZABvxq+3UiRpTPD7+gAqD0Dikl
      v95+HUMzeGH0awghjnYOoCjdRkrJb3d/gSZ0Xhj72t1PL6o9gHLqBTLgreyvcAKHF8a+hiY+
      6PZqD6Ccar70+futn6MLgxfHv9nW+UEFQDnFXN/hza2f0R8e4PPDX7nnpA0qAMqp5Pg2r238
      iDOJOZ4Z+Px9ZyxRAVBOnbpb5dXbP+Sp/ue4kHnyI6frUQFQTpWyvc8bmz/luaEvMpe68LHL
      qwAop0bByvH6xo/56vg3mYxPP9A6Rx4GbVZyLK7ePurqivJQbdc3eGPjJ3x98uUH7vxwxD2A
      DDzWt4sIBMGHJsZV1aDKSdhqrPPb3V/w9cnvkjH78Q7mt30QRyuHrlewLJtsYZ/z5+fRdV0V
      wyknYqW0wOX8W7w8+2+Im8kHWserW1Su3qTy/tonqAaVkmqtTjKZUNWgyrGTUvJe8Q+sVZb5
      xtTLxIzERy4fOB611U0q763hFCskzk+RfnZelUMr3SeQAZfzb7Hd2OAbk98lpIfvuZwMAuy9
      EqU/LFO/sU10cojMc48RnRgCTfDa4t+qACjdRcqA3+y+SdNr8GeT30EX+h99XxI0bcrv3aB0
      eQU9FibzzHmSF8+ghcy7y7yx9CpL2asqAEp3CKTP9coyl3O/YyY5z+eGv9TW+QPXo35jm9Lv
      l3EKZdJPnyP9zDxmOt72OlJKXlt6heXsIv/ty/9DBUD5dPMCl9XyEu8X32Y0NsFnBv6EpJlG
      iNbHcO3dIuV316itbBAZG6DvC5eIjg8i9M6+KKXktcVXWM1d4z//i/9OxIyqACifTm7gsFxa
      4GrxbSYTMzw98CckzRQAfsOmsnCT8pVVhKGTfnqO5OOz6JH7X9xdSsnrS6+wlr/Of3z+vxA1
      o4CaGU75lHEDl4X9KywUrzCTPMezg88TNWJ3v1/83VVKb6+QuHCG9DPzhAfTH/uaNbvGqws/
      pdjI85+e/6+Y+gdBUQFQPhUc32Zh/wrvFy8zl7rAs4NfaOv4geOy+/P/S2C7jH/vBbTQx7+F
      VW6WeXP5Nd7ZuswLcy/yZ499s6MwTgVAOVGOb3N1/wpL++8ymzrPZwY+1zGm75ZrbP3gVyQu
      TDPwpScQH9HPpJTs1bL8cuXvuJFf5YVzL/H56ecJG/e+3oUKgHLsAhnQ8GqslBdZ2n+XudQF
      nhp4jpjROWLTXM+y88o/Mfy1z5G88BEXb5eSnco2P1/4G3arO3z9wp/z7OTnMHTzI9uiAqA8
      cr70KVo5ss1tNmo3Kdp5InqUmeQ8T/Y/e883sqSUlN5eofjWApN//aeEhzL3ff3t8havXP0x
      u5VtvvX4d3l28jk0Tb/v8h92xABIKqV9MKKkElEVAKVN02tQsPbYatxmt7FF1S2TDvUxGZ9h
      In6GgfAQmtDv+0GVwPXY/flb+LUm43/1VfRw5+iOlJL14k1eX/oZZavENy58i6cmnun4zO/H
      OVIAAt8ju5djby/Pk08/iVAB6Fm+9Gm4NXabW+w0Nsk1d/Gky2BkhPHYFOOxMyTMJLr2YHWX
      brXB1g9+RWxmlKEXn+kYz/cDn9XcNd5YepUAybcuvczc4Dz6A27xAWQgwXEJitWjBUBKycbN
      VfTEAGODfXfLodWV4k83icTyGmSb2+xZu+SsLDWvQtSIMhwdYzQyyXBkrONY/kFZ2wV2f/KP
      DP7pMyQutdf0SylZyi7w86W/IRaK8ecX/xUz/WcR97yU+z34AbJcR+7XEDUbETIQ6fjRyqE9
      u8pWdp9hEUUMD6ALNTnuaSOlpOKWyVu77Da2yVm7NL06phZiODrGSHSMC/1Pkgn1H/qw454/
      69018r95l8l//RKRkb627y3svscrV39C1Izy18/+W2YHPv7i7VJKaNgExRqyVAPXQ0vFEUMZ
      xLn43T2LOglWAGh4NXYbB4cxVpaqUyZmJhiKjDASHWc4OkbSTKN/xLH7UUjPJ/t3v8ctVhj7
      3gsY8dZwZRAELGbf52dXf0oinOQ7T3yPM30z9/3ZUkrwfGSlgSzWkNUmhAxEfwKtLwkR857r
      qgD0ICklnvQoWjnWa2vcrt0gkAEj0THGYlMMRUdImClM7f6lBQ+DV2uy9aN/IDI2wPC//CxC
      1/ADn4Xd93h98WckIym+9fh3mcqcuWfnlUEAlktQqCLLdXA8RDqG6EsgUjGE8fHnBSoAPUJK
      Sd2rtTp8dY2clWUoOsqZxFmm4jN3C8yOQ+B61K7dJv/rdxj4ytOknjwLwLvbV3h96RUGYoN8
      6/GXGU9PtrUfaG3lyw3kfo2gXEdEw2h9CURfHCKhQ/8OKgCnmOPb7Da3uFlZZa+5TYBkNjnP
      dHKOkej4sbZFBgHNrTzlyyvU17ZJnJ+i7wuXMPrjvL3x/3hz+Q3GUuN854m/ZDAx1Orwjoes
      W8hqs3WzXYQmWlv3/iQiHUdonyy0KgCniO3blJ0iW/V11qtrWIHFUGSEmeQ5JuLThLXIsY7U
      SSlx96tU3r9BdXEdPR6h73MXiJ+bwJIO72z9gV+u/B+m+2b45tw3GRCpVkevNcH2wNAR8TAi
      EUUkIhAJgSYe6u+gAtClAhlg+c0PTlybOzT9Bn3hAcZjZ5iIT9MXHvjEIzRHapvjUl1cp/zO
      Kr7tknp8luSTM+T9fTZzN9nN3Wa/tEdchvnyyBcZMNJg6ohYBJE86Oxh8541/Q+bCkCXkDKg
      5Oyz09hgq75OzspiCJOR2Dhj0QnG4lMkjNSJvRcjXQ9rp0jxnxdprm0TyyRJX5gm3J/Ct20c
      6aLrBqFwFBE2W6MykRAi3tqyf9JDmaNSAfiU8aWP5TVoeA0aXo1sc5vd5hYVp0zCTDIZn2Es
      NsFIdOITD0nKQEIQtG5+6yb9ALwAPL919U/XP/iej/QOvnZ9/KaDW2/iVurYpSr721lyKYvd
      ZJV62kePRhgZnGJ8cJrRwTMMJoYADtVeKSWBH+C7Pr7rtW62h+95eLaH7/n4tovv+XiOh2e7
      BJ6P53r4zsHtYN0gCEBKpATkQZ8NAhWA4xLIAC9wsQObpteg7lYpu/vU3So1t0Ldq2P7FoEM
      iBpRokacmBFnKDLCWGyKpJnG+KNyAikl3OnEfqvTStc/uPcOnjt4/qDzyiAg8D3kna+FBF3D
      FxKpCXxN4osAV7aWNzwNoxHg79ex96s0KxXK5SIlv0LOqFAKNdmP29SGBJNjZ3ls5BKXRp5g
      MDGMqZvIQLY6quvhWS6u5WBVG9h1G6dh4zYdfMfFtdyDTu4TeK2b7/kITUM3dfSQga5rGJFQ
      67FpoJsGRtho/9o4WNY00EMGxsG9uHvuIGjdte5VAB4CKSUSeXfrXXFLlJ19Kk6JfbtA2SlR
      d2sgQaBhYBDSIoREmLAWJayFEbL1vI4OgcQMNGKEiYsoUULERYQIJsKXBI5L4Lo4jkXDbVBx
      q9TcGjW/Sc1vUA8a1PwGtnRp+ha2b+NJH3yJhoYudQw0dKmheRzcSwxfI9kMkXBC9AcJMpkh
      kv0DGP0JmgmwkwInInFDEDIjmJhojgBLEgtiBJZ/0Lkt3IaD3bDwLBfN0NFNHSNkYkZDRFIx
      wvEIoVgYMxrCCBmYkRB6yGgta+hohoZuGI/80EgF4BB86dP0GlScgw5eK1Krl6hU96nWSzRq
      ZdyGheaA5oCwJboj0B0QPoiDmSMN+aFL9AQ6htBJizhxLUpKixMj3KpxkdydblIe3Hv4NKVD
      U1o4+GhCIIR2txjM1Ew0oWEYJoZmEjJCGIaJMHU08869gRYyEKaBFjLRDL31CSvDQIYMZCSM
      LwRO08GpW9g1C7tuYdeauE3nbtt1U8eMhgknokSSEUKxCOFklHAiQija6tyhWPhTXSN2tGK4
      wOPa4iJGvI9zs1MHx1bdGYDA8wkcF9+ycZpNvHoTp1bHrTVw6nWcag233sSuVbHsBiFpEhZh
      Qr6Brunouo6maWhCa225NB1N11qdzDTQwiZ6JIQwDUTERIRNRLT1mJCJFg21hvsM/e7WThj6
      B7toXW97TgYSKQOk35qLVQatY9nWfeu5wPPxXR/XdnGbDp7dOvRwbRfv4LHTdAh8n8APCLzW
      4ZDQBKFYmFAsTDgZa93HWx08nIgQTkTvdmghBIjDHdN/Gh1tbtBGiUT/JE6tgH9wEuU4TlsI
      7my57vVYCIHv+22PnWKF6j8tHu23CCTy4PVkIFsncrSqF6Xnf7CY++GvPdyGjduw8YMA1/Px
      fYmPIBDgo7W2kiEdPyTQoylC8WECIbADcIXWCn5wcFbV+oEIdNB0JDpIAY4Pro3QnA/+DncW
      P9hw3Fk38APuFDfe/R0Ofob0W5MQ3wkGH+6AGmgH87O2vtYwIyE0U8eMhjDDIcLxCLFUGCNi
      YoRNIvFoa0xdEwhdwzTN1t/roD135nu983+789iyrfv+Xw/7+F794M5jIQSapn3s4w9XIn/U
      4zu/wx8/PlIAdD1EvV7Ed110TQMhiEQin2gPEBo2MZ9/HI5wRNbqgh/aEon27937a9Fa75Bb
      ME1v/b4fR9znDZu254VoO8YVmrhb3is08cFeQNPQdIE46CTKw3Pkc4Di3g5GvI9UPNIz5wDK
      6aNOgpWepnqs0tNUAJSepgKg9DQVAKWnPbTLpLaNaStKl3io1wm+c8XIo4wGHXValaOud5zt
      7IY2fpL1jtrOozpKO+/XxocSACEE+p237A/egfu064Z2dkMboTvaeb82PpT3ARSlW+nf//73
      v/8wXsit5biyeBPXl6RTiQearytfyBOLxe75vWopz/W1G2BE2Lm9RrnpEcLlxmaWdFRnaXkF
      X4RJxj+Y9nppYYH+oSFuXbuKnhokbHQm3irlsYwYIQ1k4LO2co1cuY7m1rl+a5NUMsbq6ip1
      O6C+v8fWXpHB/r5HUoKwubVJKpX6yGVu31hlYydPLCRYWlkjlkhx++Z1CuUGuHXW1rfoGxhE
      /0Rlw5LVa4vky00G+/9oElrZuhxu+B7zc8JH/w+dRpXl1etYnqCc22a3WCWEw/W1m2hmhK31
      69Ss4IH7C8CN1SW2d3PE0xlCDzDtCW6TfM0hdp+rxzy0cwC/WWVgcp6geJOtbZdSLk//yCj5
      XJGR4T4K+QKpZJzdQoXAdYnEkxiyyfbmJuNjE+zm90hlMhQ2d5m+cJFMqp8Jz2avsEs4NoTX
      LCGG+pBeluz2DlPnLnBreYmxD80a7NoV9goVCtldIqPTbK/dJpYZprhzi6HRcQqFEv1RwfZG
      jqFMhpnJUWbPzrF4bY2cb3J+dpjtfJO56SlubO3iYpAxoOYHJB/kj31I+XwB33PJxAzKdY9C
      3SKTTOI2qvh6mIvzZ5mcnmV5YZH13QJPPfEY19e2OXt2lsXlmxR8nbmJQfbyJSY/NJva4XmU
      9iucvTTN7uY6e/kS/UMZisUKiXic1es3eOYzT5HP7ZHoG6K4s47tgRmKEo/r7O1skeofo1rK
      EU70US9sM3xmnqG+JLNT49zO5tCCMFEcjMwg457NXnaHWHoMu1pAMvrAAbB9uHRhjpXrtyCw
      kWaCUNBARNIIt07VCoiGJOVimXAiRibZx/rOHnuZDOmIoFBpkI7HqPlw6dzswx0GlUhs12Nr
      /SZS0ygWCkyfPcd+doumJ5GezcjULKlkimQ0RDieYnp8iI0bq5QaHuCT6h+lPxWjnN+hZBvM
      To3iuDau5xGJtLb2Y9PTZG+u4Mr2TpnIDJK7uUCif4xauUjdstjeypLoHyIsXEbPnCUeDjN3
      /iJ4TQg8lq6tcuHSBfA9rKYFvsXqRo7H5ufwPBfb9dAf+N/z4ILARwhBo9GkUatgWy7T8xcJ
      GnnWt7J3K/eur1xjav4CYXyaVpNASpaWb3Dh4mMEvodlW2j6Jw2nxuNPfYbbK9dYu3ULoYHj
      BkzPnsXzJFNTU/j1Avt1F4KA9OAI6VSSoXQCzAjz56bJbtwgW6gipSSa6md4II1T3+dWtsL5
      uVk8z8HxPMp721S9MDNTwzhO6/962L+uYzUJApeNjT1AYvswNTbErVu3EUikFmZqMM34/Bxu
      3WJ0chp8h/Vbt0AIHCdg/twsQjzEQyChG+xs3GbszCyTI0PUmg5zc7Psbm0wMT2L3agzODpO
      PBYlHo2QSCQwtYBC1eXCpQt4jSqZgRFSiTihsEmjVqW0X8KIpDGCOom+ERr7e1RrDUKRGI2G
      xdz8OcwPbZkNM0w0nmR0ZJB4PIHneoxPjJNOJcj0DZDb3iCaGSAejRIJGRiGYL9QpNqwmRwf
      IltsMjaQpFQu4XiCwXQER4swkE4+SAHooWxv3GJgZIpkWKNiwfDIMNFImGgsTiYexowlSCWi
      7BfylCo1pmfOsLGxy/TUGOXSPtWGw+ToILmyzdT40Cc+RNvaWCc5OMrsxCgNRxI1fLb2ypyd
      m0W4DWL942i+RWZgiGQ8SjyRaN0iBhvbRR57/BKGtEmk+8mkE4RDIaxmg1KpjCcNMnENGUkR
      xmN/v0Qo3odwKqQGR4lH7n2h63vxrDr5qs3c2TliYUEolmIgGaVQsZgaGyDQwwwP9ROLJwiF
      o0TCEWqlPQZGJxgbGcD2BaMjQ0QiYQQP6TPByunjuQ6abqKd0GwNx0UFQOlpn+7BW0V5xFQA
      lJ6mAqD0NBUApaepACg9TQVA6WkqAEpP+/8bmHRwPh5UYwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
